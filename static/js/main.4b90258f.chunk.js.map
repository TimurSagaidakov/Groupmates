{"version":3,"sources":["loader/loader.module.css","main/main.module.css","redux/messagesReducer.js","hoc/withAuthRedirect.js","content/profileUser/profileUser.module.css","header/logo.png","button/button.module.css","assets/img/twitter.svg","assets/img/github.svg","assets/img/instagram.svg","assets/img/vk.svg","assets/img/facebook.svg","content/avatar/avatar.module.css","content/posts/post/avatar/avatar.module.css","content/posts/newPost/newPost.module.css","api/api.js","loader/loader.js","header/header.js","redux/authReducer.js","header/headerContainer.js","content/avatar/avatar.js","content/posts/post/avatar/avatar.js","content/posts/post/post.js","content/posts/post/postRender.js","content/posts/post/postContainer.js","redux/homeReducer.js","content/posts/newPost/newPost.js","content/posts/newPost/newPostContainer.js","content/profile/profileStatus/profileStatusHook.js","content/profileUser/profileUser.js","content/profileUser/profileUserContainer.js","sidebar/friendList/friend.js","sidebar/friendList/friendListContainer.js","sidebar/sidebar.js","redux/appReducer.js","login/login.js","login/loginContainer.js","hoc/withSuspense.js","main/main.js","redux/sidebarReducer.js","redux/redux-store.js","App.js","serviceWorker.js","index.js","content/posts/post/post.module.css","login/login.module.css","header/header.module.css","sidebar/sidebar.module.css","button/button.js","messages/userAvatar.jpg","content/avatar/avatar.jpg","messages/avatarEnot.jpg","messages/avatarCat.jpg","sidebar/friendList/friendList.module.css","formWarning/formWarning.module.css","helper.js","redux/usersReducer.js","assets/img/defaultAvatar.jpeg","formWarning/formWarning.js","validators/validatorForm.js","messages/avatarMusic.webp","content/profile/profileStatus/profileStatus.module.css"],"names":["module","exports","initialState","allMessages","id","name","message","avatar","avatarCat","avatarMusic","avatarEnot","unreadMessages","newMessageCreator","type","newUnreadMessageCreator","unreadMessage","messagesReducer","state","action","newMessageText","Avatar","withAuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","auth","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","usersOnPages","get","switchPages","pageNumber","Follow","post","Unfollow","delete","profileAPI","getProfile","userId","getLogin","getStatus","putStatus","status","put","authAPI","login","email","password","rememberMe","logout","captcha","Loader","className","s","container","lds_default","Header","myId","header","logo","src","alt","loginNav","userName","function","isFetching","SetAuthUserData","payload","dispatch","a","response","data","resultCode","authReducer","HeaderContainer","AvatarPost","Post","info","href","text","title","body","PostRender","posts","map","p","key","PostContainer","home","current_time","day","month","profileUsers","newPostText","setProfileUsersStatus","profileStatusState","loaderUsers","homeReducer","newPost","Date","toLocaleTimeString","newText","profileUsersState","updateStatusText","NewPost","onChange","ChangePostFunc","value","placeholder","addPostFunc","NewPostContainer","addPost","e","target","updateNewPostText","actionCreator","useState","setStatus","useEffect","editMode","setEditMode","inputText","onBlur","currentTarget","autoFocus","onDoubleClick","ProfileUser","match","photos","large","defaultAvatar","fullName","job","job_looking","job_text","lookingForAJobDescription","social","social_link","social_link_nav","contacts","facebook","vk","twitter","instagram","github","params","ProfileUserContainer","prevProps","compose","usersList","withRouter","Friend","friend","FriendContainer","users","u","followed","small","sidebar","activeClassName","active","title_friends","initial","appReducer","maxLength50","maxLength","ReduxLoginForm","reduxForm","form","handleSubmit","error","onSubmit","Field","input","component","Textarea","typefield","validate","required","summaryError","checkboxWrapper","checkbox","htmlFor","Login","formData","LoginContainer","messages","length","stopSubmit","_error","WithSuspense","link","path","render","fallback","UsersContainer","lazy","MessagesContainer","Main","initializeApp","wrap","app","Promise","all","then","friendList","sidebarReducer","reducers","combineReducers","usersReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","App","MainApp","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Button","cn","button","onClick","updateObjectInArray","items","itemsId","objPropName","newObjProps","usersTotalCount","following","follow","userID","unfollow","followingUsers","isFollowing","count","totalCount","SetCurrentPage","followUnfollow","AC","ApiMethod","followUser","UnfollowUser","filter","meta","errorExclamation","touched","errorText","inputWrapper","createElement","exclamation","icon","faExclamationCircle","warningText"],"mappings":"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","file":"static/js/main.4b90258f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__lITww\",\"lds_default\":\"loader_lds_default__1BznN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main_container__1BgHZ\",\"wrap\":\"main_wrap__2stXD\"};","import avatar from './../messages/userAvatar.jpg';\r\nimport avatarEnot from './../messages/avatarEnot.jpg';\r\nimport avatarCat from './../messages/avatarCat.jpg';\r\nimport avatarMusic from './../messages/avatarMusic.webp';\r\nimport Avatar from './../content/avatar/avatar.jpg';\r\n\r\n/* action type переменные */\r\nconst sendMessageType = 'SEND-MESSAGE',\r\n      unreadNewMessage = 'UNREAD-NEW-MESSAGE'\r\n\r\nlet initialState = { /* Базы данных по умолчанию для redux, чтобы он брал начальные значения*/\r\n  allMessages : [\r\n    { id:1, name: 'Петька', message: 'Я сегодня не смогу', avatar: avatarCat },\r\n    { id:2, name: 'Васька', message: 'Ты где?', avatar: avatarMusic },\r\n    { id:3, name: 'Илюшка', message: 'Я очень жду', avatar:avatar },\r\n    { id:4, name: 'Без ника', message: 'Спам', avatar: avatarEnot },\r\n  ],\r\n  unreadMessages : [\r\n    {id: '1' , name: 'Петр Первый' , avatar: avatar, message: 'Где Европа?'},\r\n    {id: '2' , name: 'Рузвельт' , avatar: avatarCat, message: 'How are you?'},\r\n    {id: '3' , name: 'Михалыч' , avatar: avatarEnot, message: 'Наша раша'},\r\n    {id: '4' , name: 'Морковка' , avatar: avatar, message: 'Раз два перец'},\r\n  ]\r\n}\r\nconst messagesReducer = (state = initialState , action) => {\r\n  switch (action.type) {\r\n    case sendMessageType: {\r\n      let newMessageText = {\r\n        id: 5,\r\n        name: 'Новый',\r\n        message: action.message,\r\n        avatar: Avatar\r\n      }\r\n      return{...state, /*возвращаем новый state */\r\n        allMessages: [...state.allMessages, newMessageText], /*Пушим полученное значение в массив, который выводится на экран */\r\n      }\r\n    }\r\n    case unreadNewMessage : {\r\n      let newMessageText = {\r\n        id: 5,\r\n        name: 'Я',\r\n        message: action.unreadMessage,\r\n        avatar: Avatar\r\n      }\r\n      return{\r\n        ...state,\r\n        unreadMessages: [...state.unreadMessages, newMessageText]\r\n      }\r\n    } \r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\nexport const newMessageCreator =(message) => ( { type: sendMessageType,message  } ) /* Добавление нового сообщения в UI части */\r\nexport const newUnreadMessageCreator =(unreadMessage) => ( { type:  unreadNewMessage , unreadMessage} ) /* Добавление нового сообщения в UI части непрочитанные сообщения*/\r\n\r\nexport default messagesReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n  class RedirectComponent extends React.Component {\r\n  render(){\r\n    if(!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n  return <Component {...this.props} />\r\n  }\r\n  }\r\n  let mapStateToProps= (state)=>{\r\n    return{\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  }\r\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profileUser_container__3q7fE\",\"avatar\":\"profileUser_avatar__3b_hM\",\"name\":\"profileUser_name__28yiv\",\"status\":\"profileUser_status__hA_YU\",\"job_text\":\"profileUser_job_text__3UocH\",\"social\":\"profileUser_social__3KIyk\",\"social_link\":\"profileUser_social_link__wVH4W\"};","module.exports = __webpack_public_path__ + \"static/media/logo.8589eac6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3nse0\",\"buttonDisabled\":\"button_buttonDisabled__1jD_I\"};","module.exports = __webpack_public_path__ + \"static/media/twitter.8f662cde.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.40dfc54e.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.c9b542c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.a1be3031.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.243540a2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"avatar_avatar__38u5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"avatar_container__1-rJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"newPost_post__2K2rX\"};","import * as axios from 'axios';\r\nconst instance = axios.create({ /* Создание instance для отображения в объектах ниже */\r\n  withCredentials:true,/* Для авторизации на сервере цепляем cookie */\r\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`, /* Базовый адрес */\r\n  headers:{\r\n    \"API-KEY\": \"dfb6dd5b-f412-4b96-9a15-3f1e5949acdc\" /* ключ для запросов */\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage,usersOnPages) {/* Получить пользователей на странице \"Все  пользователи\" */\r\n    return instance.get(`users?page=${currentPage}&count=${usersOnPages}`)\r\n  },\r\n  switchPages(pageNumber,usersOnPages) { /*Переход на другую страницу на странице \"Все пользователи\" */\r\n    return instance.get(`users?page=${pageNumber}&count=${usersOnPages}`)\r\n  },\r\n  Follow(id) { /* Запрос к БД о подписке к пользователю */\r\n    return instance.post(`follow/${id}`)\r\n  },\r\n  Unfollow(id){ /* Запрос к БД об отписке от пользователю */\r\n    return instance.delete(`follow/${id}`)\r\n  }\r\n};\r\nexport const profileAPI ={\r\n  getProfile(userId){ /* Запрос к БД о получении данных профиля пользователя */\r\n    return instance.get(`profile/` + userId)\r\n  },\r\n  getLogin(){ /* Получение имени пользователя из БД */\r\n    return instance.get(`auth/me`)\r\n  },\r\n\r\n  getStatus(userId){//Получение статуса пользователя */\r\n    return instance.get('profile/status/'  + userId)\r\n  },\r\n  putStatus(status){ //Добавление статуса пользователя \r\n    return instance.put('profile/status', {status})\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  getLogin(){ /* Получение имени пользователя из БД */\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email,password, rememberMe = false){ //Логинизация\r\n    return instance.post(`auth/login`, {email,password, rememberMe})\r\n  },\r\n  logout(){ //Вылогинизация\r\n    return instance.delete(`auth/login`)\r\n  },\r\n  captcha(){\r\n    return instance.get(`security/get-captcha-url`)\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from'./loader.module.css'\r\nconst Loader = (props) => {\r\nreturn(\r\n  <div className={s.container}>\r\n    <div className={s.lds_default}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  </div>\r\n);\r\n}\r\nexport default Loader;","import React from 'react';\r\nimport logo from './logo.png';\r\nimport s from './header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '../button/button';\r\nconst Header = ({myId,login,logout,isAuth}) =>{\r\n  return(\r\n    <header className={s.header}>\r\n      <div className={s.logo}>\r\n        <img src={logo} alt=\"логотип\" />\r\n      </div>\r\n      <div className={s.name}>\r\n        Одноклубники\r\n      </div>\r\n      <div className={s.login}>\r\n        {isAuth\r\n          ? \r\n        <div className={s.loginNav}>\r\n          <NavLink to={'/profile/' + myId} className={s.userName}>{login}</NavLink>\r\n          <Button name='Выйти' function={logout}/>\r\n        </div>\r\n          :\r\n        <NavLink to={'/login'}>Войти</NavLink>\r\n        }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import {authAPI} from '../api/api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SetAuthUser = 'SET-AUTH-USER-DATA';\r\nconst LoginUser = 'LOGIN-USER';\r\nconst Anti_Bot_Captcha= 'ANTI-BOT-CAPTCHA';\r\n\r\nlet initialState ={\r\n  id: null,\r\n  email: null,\r\n  password: null,\r\n  isAuth: false,\r\n  isFetching: false,\r\n  captcha : false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case SetAuthUser :{ \r\n      return{\r\n        ...state,\r\n        ...action.payload /*Создаем общую бд для всех записей в initialState */\r\n      }\r\n    }\r\n    case LoginUser: {\r\n      return{\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    }\r\n    case Anti_Bot_Captcha: {\r\n      return{\r\n        ...state,\r\n        captcha : true,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst SetAuthUserData = (id,email,login,isAuth)=>({type: SetAuthUser, payload:{id,email,login,isAuth}})\r\n//const loginUser = (email,password,rememberMe) =>({type: LoginUser, payload:{email,password,rememberMe}});\r\n//const AntiBotCaptcha = () =>({type: Anti_Bot_Captcha })\r\nexport const getLogin = ()=> async(dispatch)=>{\r\n  let response = await authAPI.getLogin()\r\n      if(response.data.resultCode === 0){\r\n        let {id,email,login } = response.data.data;\r\n        dispatch(SetAuthUserData(id,email,login,  true))\r\n      }\r\n  }\r\n\r\n\r\nexport const login =(email,password,rememberMe)=>async (dispatch) =>{\r\n    let response =  await authAPI.login(email,password,rememberMe)\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(getLogin())\r\n      }\r\n      else{\r\n        let message = response.data.messages.length > 0 //Если сообщение от сервера длиннее нуля, то есть не пустое\r\n            ? response.data.messages //вытаскиваем сообщение из полученного ответа от сервера\r\n            : \"Неправильно введенные данные\";\r\n          dispatch(stopSubmit('Login', {_error : message}))      \r\n      }\r\n  }\r\n\r\n\r\nexport const logout =()=>async (dispatch) =>{\r\n    let response = await authAPI.logout()\r\n      if(response.data.resultCode === 0) {\r\n        dispatch(SetAuthUserData(null,null,null, false))\r\n      }\r\n  }\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../redux/authReducer';\r\nclass HeaderContainer extends React.Component {\r\n  logout = () => {\r\n    this.props.logout();\r\n  }\r\n  render(){\r\n  return <Header {...this.props} logout={this.logout}/>\r\n  }\r\n}\r\n\r\nlet mapStateToProps =(state)=>{\r\n  return{\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    myId: state.auth.id\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer)","import React from 'react';\r\nimport avatar  from './avatar.jpg';\r\nimport s from './avatar.module.css';\r\nconst Avatar = () => {\r\nreturn(\r\n  <div className={s.avatar}>\r\n    <img src={avatar} alt=\"\" />\r\n  </div>\r\n);\r\n}\r\nexport default Avatar;","import React from 'react';\r\nimport Avatar from '../../../avatar/avatar';\r\nimport s from './avatar.module.css';\r\nconst AvatarPost = () => {\r\nreturn(\r\n  <div className={s.container}>\r\n    <Avatar/>\r\n  </div>\r\n);\r\n}\r\nexport default AvatarPost;","import React from 'react';\r\nimport AvatarPost from './avatar/avatar';\r\nimport s from './post.module.css';\r\nconst Post = (props) => {\r\nreturn(\r\n  <div className={s.post}>\r\n    <div className={s.info}>\r\n      <AvatarPost/>\r\n      <div className={s.container}>\r\n        <a href=\"#s\" className={s.name}>{props.name}</a>\r\n      </div>\r\n    </div>\r\n    <div className={s.text}>\r\n      <div className={s.title}>\r\n        {props.title}\r\n      </div>\r\n      <div className={s.body}>\r\n        {props.text}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\nexport default Post;","import React from 'react';\r\nimport Post from './post';\r\nconst PostRender = (props) => {\r\n  \r\nreturn <>\r\n  {props.posts.map( p => (<Post title={p.title} key={p.id} id={p.id} name={p.name} text={p.text} />))}\r\n</>\r\n}\r\nexport default PostRender;","import {connect} from 'react-redux';\r\nimport PostRender from './postRender';\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n    posts : state.home.posts\r\n  }\r\n}\r\n\r\n\r\nconst PostContainer = connect(mapStateToProps)(PostRender)\r\nexport default PostContainer;","import {profileAPI} from '../api/api';\r\n\r\nconst AddPost = 'ADD-POST',\r\n      updateNewPost = 'UPDATE-NEW-POST-TEXT',  // action type переменные\r\n      Set_Profile_User_State = 'SET-PROFILE-USER-STATE',\r\n      loader_Users = 'LOADER-USERS',\r\n      Set_Profile_User_Status = 'SET-PROFILE-USER-STATUS',\r\n      Put_Profile_User_Status = 'PUT-PROFILE-USER-STATUS',\r\n      Update_Status = 'UPDATE-STATUS';\r\n\r\nlet initialState = {/* Базы данных по умолчанию для redux, чтобы он брал начальные значения*/\r\n  posts : [\r\n    {id: 1, title: 'Какой то старый пост' , name: 'Тимур' , text: 'Сообщение поста', current_time: '20:10', day: '19', month: 'ноября', },\r\n    {id: 2, title: 'Еще один старый пост' , name: 'Володя' , text: 'Сообщение поста',current_time: '20:10', day: '24', month: 'ноября', },\r\n    {id: 3, title: 'Первый пост' , name: 'Паша' , text: 'Сообщение поста',current_time: '20:10', day: '22', month: 'ноября', },\r\n  ],\r\n  profileUsers: null,\r\n  newPostText : '',\r\n  isFetching: false,\r\n  status: null\r\n}\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case AddPost :{\r\n      let newPost = {\r\n        id: 4,\r\n        title: 'Abrakadabra',\r\n        name: 'pokemon',\r\n        text: state.newPostText,\r\n        current_time: new Date().toLocaleTimeString(),\r\n        month: \"Ноябрь\",\r\n        day: '24'\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts,newPost],\r\n        newPostText: ''\r\n      }\r\n      \r\n    }\r\n    case updateNewPost:{\r\n      return{\r\n        ...state,\r\n        newPostText: action.newText\r\n      }\r\n    }\r\n    case Set_Profile_User_State:{\r\n      return{\r\n        ...state,\r\n        profileUsers: action.profileUsersState\r\n      }\r\n    }\r\n    case loader_Users :{ \r\n      return { ...state, isFetching: action.isFetching}\r\n    }\r\n    case Set_Profile_User_Status :{\r\n      return{\r\n        ...state,\r\n        status:action.profileStatusState\r\n      }\r\n    }\r\n    case Update_Status :{\r\n      return {\r\n        ...state,\r\n        status: action.updateStatusText\r\n      }\r\n    }\r\n    /*case Put_Profile_User_Status:{\r\n      return{\r\n        ...state,\r\n        status: action.putStatus\r\n      }\r\n    }*/\r\n    default : {\r\n      return state;\r\n    }\r\n  }\r\n}\r\nconst setProfileUsersState =(profileUsersState) => ( {type: Set_Profile_User_State, profileUsersState })\r\nconst setProfileUsersStatus = (profileStatusState) =>({type: Set_Profile_User_Status, profileStatusState}) //Взятие статуса из БД\r\nexport const updateStatus = (updateStatusText) =>({ type: Update_Status, updateStatusText}) //Редактирование статуса\r\n//const putProfileUsersStatus = (putStatus) =>({type: Put_Profile_User_Status, putStatus}) //Добавление статуса в БД\r\nexport const addPostActionCreator = () =>( { type: AddPost } )  /* Добавление нового поста в UI */\r\nconst loaderUsers = (isFetching) =>({type: loader_Users , isFetching})\r\nexport const updateNewPostText = (text) =>( { /*Добавление поста в БД */\r\n    type: updateNewPost,\r\n    newText: text\r\n} )\r\n\r\nexport const getProfile = (userId) =>{\r\n  return async (dispatch)=>{\r\n    dispatch(loaderUsers(true))\r\n    let response = await profileAPI.getProfile(userId)\r\n      dispatch(setProfileUsersState(response.data)) \r\n      dispatch(loaderUsers(false))\r\n  }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n  return async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId)\r\n      dispatch(setProfileUsersStatus(response.data))\r\n  }\r\n}\r\nexport const putStatus = (status) => {\r\n  return async (dispatch)=>{\r\n    let response = await profileAPI.putStatus(status)\r\n      if(response.data.resultCode === 0){\r\n        dispatch(setProfileUsersStatus(status))\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default homeReducer;","import React from 'react';\r\nimport Button from '../../../button/button';\r\nimport s from './newPost.module.css';\r\n\r\nconst NewPost = (props) =>{\r\nreturn <div className={s.post}>\r\n    <h1>{props.title}</h1>\r\n      <textarea onChange={props.ChangePostFunc} value={props.newPostText} type=\"textarea\"  placeholder=\"Расскажите что у вас новенького?\"/>\r\n      <Button function={props.addPostFunc} name='Опубликовать'/>\r\n  </div>\r\n}\r\nexport default NewPost;","import { connect } from 'react-redux';\r\nimport {addPostActionCreator, updateNewPostText} from './../../../redux/homeReducer';\r\nimport NewPost from './newPost';\r\nimport React from 'react';\r\n\r\nclass NewPostContainer extends React.Component {\r\n  addPostFunc =() => {\r\n    this.props.addPost();\r\n  }\r\n  ChangePostFunc = (e) =>{\r\n    let text = e.target.value;\r\n    this.props.updateNewPostText(text);\r\n  }\r\nrender(){\r\nreturn <NewPost ChangePostFunc={this.ChangePostFunc}\r\n                addPostFunc={this.addPostFunc}\r\n                newPostText={this.props.newPostText}\r\n                home={this.props.home} />\r\n  }\r\n}\r\n     /* store.getState() */\r\nlet mapStateToProps = (state)=>{\r\n  return {\r\n    home: state.home, /* Берем массив home из state */\r\n    newPostText : state.home.newPostText /* Берем данные из пустой переменной в state */ \r\n  }\r\n  \r\n}\r\nlet mapDispatchToProps = (dispatch)=>{ /* Вытаскиваем dispath из store и поэтому не пишем store в функциях */\r\n  return{\r\n    updateNewPostText: (text) => {\r\n      let actionCreator = updateNewPostText(text) /* Вводим переменную для action Creator'a */\r\n          dispatch(actionCreator);  /* Не пишем store!! */\r\n    },\r\n    addPost: () =>{\r\n      let actionCreator = addPostActionCreator(); /* Вводим переменную для action Creator'a */\r\n      dispatch( actionCreator); /* Не пишем store!! */\r\n    }\r\n  }\r\n}\r\n\r\n                                  /* state*/      /*dispatch */  /* Класс. компонента */\r\nexport default  connect(mapStateToProps,mapDispatchToProps)(NewPostContainer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from'./profileStatus.module.css'\r\nimport {getStatus,putStatus} from '../../../redux/homeReducer';\r\n\r\n\r\nconst ProfileStatusHook = (props) =>{\r\n  let [status, setStatus] = useState(props.status)\r\n  useEffect(()=>{\r\n    props.getStatus(props.userId) //получение статуса из апи\r\n    setStatus(props.status) //присвоение статуса из данных статусу хука\r\n  },[props.status]) // от этого зависит наша отрисовка\r\n  let [editMode, setEditMode] = useState(false);\r\n  //Расписал что получается в верхней записи\r\n  //let stateWithSetState = useState(false) /*, функция которая меняет первую переменную */\r\n  //let editMode = stateWithSetState[0] // = false\r\n  //let setEditMode = stateWithSetState[1] // = функция которая меняет первую переменную\r\n\r\n  const editModeOn = ()=>{\r\n    setEditMode(true) //Меняем на противоположное значение editMode в useState\r\n  }\r\n  const editModeOff = ()=>{\r\n    setEditMode(false) //Меняем на противоположное значение editMode в useState\r\n    props.putStatus(status);\r\n  }\r\n  \r\n  const UpdateStatus = (e) =>{ // Обновляем локальный стейт когда набираем сообщение в статусе\r\n    setStatus(e.currentTarget.value )\r\n  }\r\n  return <div className={s.container}>\r\n        {editMode \r\n          ?  <div className={s.inputText}>\r\n              <input   \r\n                      onBlur={editModeOff}\r\n                      onChange={UpdateStatus}\r\n                      type=\"text\"  \r\n                      value={status}\r\n                      autoFocus={true}/>\r\n            </div>\r\n          : <div  className={s.text} \r\n                  onDoubleClick={editModeOn}\r\n                  > \r\n              {props.status? props.status: 'Нет статуса'}\r\n            </div>  \r\n}\r\n</div>\r\n}\r\nlet mapStateToProps =(state)=>{\r\n  return {\r\n    status: state.home.status,\r\n    userId: state.home.profileUsers.userId,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{putStatus,getStatus})(ProfileStatusHook);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Loader from '../../loader/loader';\r\nimport s from'./profileUser.module.css';\r\nimport twitter from './../../assets/img/twitter.svg';\r\nimport github from './../../assets/img/github.svg';\r\nimport instagram from './../../assets/img/instagram.svg';\r\nimport vk from './../../assets/img/vk.svg';\r\nimport facebook from './../../assets/img/facebook.svg';\r\nimport defaultAvatar from '../../assets/img/defaultAvatar.jpeg';\r\nimport PostContainer from '../posts/post/postContainer';\r\nimport NewPostContainer from '../posts/newPost/newPostContainer';\r\nimport ProfileStatusHook from '../profile/profileStatus/profileStatusHook';\r\n\r\nconst ProfileUser = ({profileUsers,userId,match}) => {\r\n  if(!profileUsers){\r\n    return <Loader/>\r\n  }\r\nreturn <div className={s.container}>\r\n      <div className={s.avatar}>\r\n        <img src={profileUsers.photos.large? profileUsers.photos.large :  defaultAvatar} alt=\"\" />\r\n      </div>\r\n      <div className={s.info}>\r\n        <div className={s.name}>\r\n          {profileUsers.fullName}\r\n        </div>\r\n        <div className={s.status}>\r\n        <ProfileStatusHook/>\r\n        </div>\r\n      <div className={s.job}>\r\n        <div className={s.job_looking}>\r\n          {profileUsers ?\r\n          <div className={s.job_text}>\r\n            Позовите меня на собеседование!!\r\n          </div> : \r\n          <div className={s.job_text}>\r\n            Я уже работаю\r\n          </div> }\r\n        </div>\r\n        <div className={s.job_looking}>\r\n          <div className={s.job_text}>{profileUsers.lookingForAJobDescription}</div>\r\n        </div>\r\n      </div>\r\n      <div className={s.social}>\r\n        <div className={s.social_link}>\r\n          <NavLink className={s.social_link_nav} to={profileUsers.contacts.facebook ? profileUsers.contacts.facebook: \"vk.com\"}><img src={vk} alt=\"\"/></NavLink>\r\n        </div>\r\n        <div className={s.social_link}>\r\n          <NavLink  className={s.social_link_nav} to={profileUsers.contacts.vk? profileUsers.contacts.vk: \"vk.com\"}><img src={facebook} alt=\"\"/></NavLink>\r\n        </div>\r\n        <div className={s.social_link}>\r\n          <NavLink className={s.social_link_nav} to={profileUsers.contacts.twitter? profileUsers.contacts.twitter: \"vk.com\"}><img src={twitter} alt=\"\"/></NavLink>\r\n        </div>\r\n        <div className={s.social_link}>\r\n          <NavLink className={s.social_link_nav} to={profileUsers.contacts.instagram? profileUsers.contacts.instagram: \"vk.com\"}><img src={instagram} alt=\"\"/></NavLink>\r\n        </div>\r\n        <div className={s.social_link}>\r\n          <NavLink className={s.social_link_nav} to={profileUsers.contacts.github? profileUsers.contacts.github: \"vk.com\"}><img src={github} alt=\"\"/></NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {userId=== +match.params.userId\r\n    ? <>\r\n        <NewPostContainer/>\r\n        <PostContainer/>\r\n      </>\r\n    : '' }    \r\n      </div>\r\n}\r\nexport default ProfileUser;","import React from 'react';\r\nimport ProfileUser from './profileUser';\r\nimport {connect} from 'react-redux';\r\nimport {getProfile} from '../../redux/homeReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loader from '../../loader/loader';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileUserContainer extends React.Component {\r\n  componentDidMount(){\r\n    let myId = this.props.userId;\r\n    let currentId = this.props.match.params.userId;\r\n    if(!currentId){\r\n      this.props.getProfile(myId)\r\n    }\r\n    this.props.getProfile(this.props.match.params.userId) ;\r\n  }\r\n  componentDidUpdate(prevProps){\r\n\r\n    if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n      let myId = this.props.userId;\r\n      let currentId = this.props.match.params.userId;\r\n      if(!currentId){\r\n        this.props.getProfile(myId)\r\n      } \r\n      this.props.getProfile(this.props.match.params.userId) ;\r\n      }\r\n    }\r\n  \r\n  render(){\r\n    \r\nreturn <> \r\n{this.props.isFetching\r\n? <Loader/>\r\n: <ProfileUser {...this.props} />\r\n}\r\n</>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps =(state) =>{\r\n  return{\r\n    profileUsers: state.home.profileUsers,\r\n    isFetching: state.usersList.isFetching, /* Loader */\r\n    userId: state.auth.id\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default  compose(connect(mapStateToProps, {getProfile}), //      ^ \r\n                        withRouter,                             //      | \r\n                        withAuthRedirect                        //      | \r\n                        )(ProfileUserContainer)             // ProfileUserContainer \r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from'./friendList.module.css';\r\n\r\nconst Friend = (props) => {\r\nreturn(\r\n  <div className={s.container}>\r\n    <div className={s.friend}>\r\n      <div className={s.avatar}>\r\n        <img src={props.avatar} alt=''/>\r\n      </div>\r\n      <div className={s.name}>\r\n        <NavLink to={'/profile/' + props.id} >\r\n          {props.name}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\nexport default Friend;","import {connect} from 'react-redux';\r\nimport React from 'react';\r\nimport Friend from './friend';\r\nimport {getUsers} from '../../redux/usersReducer';\r\nimport defaultAvatar from '../../assets/img/defaultAvatar.jpeg';\r\n\r\nclass FriendContainer extends React.Component {\r\n  componentDidMount(){\r\n    this.props.getUsers(null, this.props.usersOnPages)\r\n  }\r\n  render(){\r\nreturn <div className='container'>\r\n  {this.props.users.map(u=> u.followed? <Friend id={u.id} key={u.id} avatar={u.photos.small != null ? u.photos.small: defaultAvatar} name={u.name}/>: '')}\r\n</div>\r\n}\r\n}\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n    users: state.usersList.users,\r\n    usersOnPages: 99\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{getUsers})(FriendContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FriendListContainer from './friendList/friendListContainer';\r\nimport s from './sidebar.module.css';\r\nconst Sidebar = ({myId,}) => {\r\n  return(\r\n      <div className={s.container}>\r\n        <nav className={s.sidebar}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to={'/profile/' + myId} activeClassName={s.active}>Моя страница</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/messages\" activeClassName={s.active}>Сообщения</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/users\" activeClassName={s.active}>Все пользователи</NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className={s.title_friends}>Список друзей</div>\r\n        <FriendListContainer/>\r\n      </div>\r\n  );\r\n}\r\nlet mapStateToProps =(state)=>{\r\n  return {myId: state.auth.id}\r\n}\r\nexport default connect(mapStateToProps)(Sidebar);","import {getLogin} from './authReducer';\r\n\r\nconst InitialApp = 'INITIAL-APP';\r\n\r\nlet initialState = {\r\n  initial: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action)=>{\r\n  switch(action.type){\r\n    case InitialApp:{\r\n      return{\r\n        ...state,\r\n        initial: true\r\n      }\r\n    }\r\n    default :{\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport const initialApp = () =>({type: InitialApp})\r\n\r\nexport const initializeApp =()=>(dispatch)=>{\r\n  let app = dispatch(getLogin()); \r\n  Promise.all([app])\r\n    .then( () =>{ //Конец асинхронной команды от диспатча getLogin \r\n      dispatch(initialApp())\r\n\r\n      //Сюда можно добавлять еще диспатчи которые нужны перед загрузкой\r\n    })\r\n}\r\nexport default appReducer;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport Button from '../button/button';\r\nimport Textarea from '../formWarning/formWarning';\r\nimport { maxLength, required } from '../validators/validatorForm';\r\nimport s from'./login.module.css'\r\n\r\nlet maxLength50 = maxLength(50)\r\nconst LoginForm = ({handleSubmit,error,captcha}) => {\r\nreturn <form className={s.form} onSubmit={handleSubmit}>\r\n    <Field  name='email' \r\n            placeholder='Введите логин' \r\n            className={s.input} \r\n            component={Textarea} \r\n            typefield='input'\r\n            validate={[required,maxLength50]}/>\r\n    <Field  name='password' \r\n            placeholder='Введите пароль' \r\n            className={s.input} \r\n            component={Textarea} \r\n            typefield='input'\r\n            type='password'\r\n            validate={[required,maxLength50]}/>\r\n    <div className={s.summaryError}> {/* Всплывающая ошибка */}\r\n      {error}\r\n    </div>\r\n    <div className={s.checkboxWrapper}>\r\n      <Field  name='rememberMe' \r\n              type='checkbox' \r\n              className={s.checkbox} \r\n              id='logCheckbox' \r\n              component='input'\r\n              />\r\n      <label htmlFor='logCheckbox' >Запомнить меня</label>\r\n    </div>\r\n    {captcha === true &&\r\n      <Field  name='captcha'\r\n              typefield='input'\r\n              component={Textarea}\r\n              />\r\n    }\r\n    <Button name='Войти'/>\r\n  </form>\r\n}\r\nconst ReduxLoginForm = reduxForm({form: 'Login'})(LoginForm) //Оборачиваем нашу форму в ReduxForm HOC\r\nconst Login = (props) => {\r\n  const onSubmit =(formData)=>{\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n  if(props.isAuth){\r\n    return <Redirect to={'/profile/' + props.myId}/>\r\n  }\r\nreturn <div className={s.container}>\r\n  <h1>Войдите в свой аккаунт</h1>\r\n  <ReduxLoginForm onSubmit={onSubmit} {...props}/> \r\n</div>\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from './login';\r\nimport {login} from '../redux/authReducer';\r\nclass LoginContainer extends React.Component {\r\n  login(email, password, rememberMe) {\r\n    this.props.login(email, password, rememberMe)\r\n  }\r\n  render(){\r\nreturn <Login myId={this.props.myId}captcha={this.props.captcha} login={this.login} {...this.props} />\r\n}\r\n}\r\nlet mapStateToProps =(state)=>{\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha,\r\n    myId: state.auth.id\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{login})(LoginContainer);","import React, { Suspense } from 'react';\r\nimport Loader from '../loader/loader';\r\nimport { Route } from 'react-router-dom';\r\nexport const WithSuspense= (Component,link) =>{\r\nreturn <Route path ={link} render={ () => {\r\n              return  <Suspense fallback={<Loader/>}>\r\n                        <Component /> \r\n                      </Suspense>\r\n                }          \r\n            }/>\r\n}\r\n\r\nexport default WithSuspense;","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Loader from '../loader/loader';\r\nimport { Route } from 'react-router-dom';\r\nimport ProfileUserContainer from '../content/profileUser/profileUserContainer';\r\nimport Sidebar from '../sidebar/sidebar';\r\nimport s from './main.module.css';\r\nimport {initializeApp} from '../redux/appReducer';\r\nimport LoginContainer from '../login/loginContainer';\r\nimport {WithSuspense} from '../hoc/withSuspense';\r\n//Ленивая загрузка компонентов\r\nconst UsersContainer = React.lazy( () => import ('../users/usersContainer') )\r\nconst MessagesContainer = React.lazy( () => import ('../messages/messagesContainer') )\r\n\r\n\r\nclass Main extends React.Component{\r\n  componentDidMount(){\r\n    this.props.initializeApp();\r\n  }\r\n  render(){\r\n    if(!this.props.initial){ //Пока не задиспатчится то, что указано здесь, будет показан прелоадер\r\n      return <Loader/>\r\n    }\r\n      return(\r\n        <main className={s.container}> \r\n              <Sidebar/>        \r\n          <div className={s.wrap}>\r\n            {WithSuspense(ProfileUserContainer,\"/profile/:userId\")}\r\n            {WithSuspense(MessagesContainer,\"/messages\")}\r\n            <Route path=\"/users\" render={ () => <UsersContainer/> } />\r\n            <Route path=\"/login\" render={ () =><LoginContainer/>}/>\r\n          </div>\r\n        </main> \r\n    )\r\n  }\r\n}\r\nlet mapStateToProps =(state)=>{\r\n  return{\r\n    initial: state.app.initial\r\n  }\r\n}\r\nexport default connect(mapStateToProps,{initializeApp})(Main);","import avatar from './../messages/userAvatar.jpg';\r\nimport avatarEnot from './../messages/avatarEnot.jpg';\r\nimport avatarCat from './../messages/avatarCat.jpg';\r\nimport avatarMusic from './../messages/avatarMusic.webp';\r\nlet initialState = { /* Базы данных по умолчанию для redux, чтобы он брал начальные значения*/\r\n  friendList : [\r\n    {name: 'Андрей' , avatar: avatarCat , id:'1'},\r\n    {name: 'Алексей' , avatar: avatarMusic , id:'2'},\r\n    {name: 'Маруся' , avatar: avatarEnot , id:'3'},\r\n    {name: 'Пипетка' , avatar: avatar , id:'4'},\r\n  ]\r\n}\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n  return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore,compose} from 'redux';\r\nimport homeReducer from './homeReducer';\r\nimport messagesReducer from './messagesReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'; \r\n\r\n/* Склеиваем все reducer'ы в одну переменную*/\r\nlet reducers = combineReducers({\r\n  home : homeReducer, /*Соотношение ветки state к каждому reducer'у */\r\n  messages : messagesReducer, /*Соотношение ветки state к каждому reducer'у */\r\n  sidebar: sidebarReducer, /*Соотношение ветки state к каждому reducer'у */\r\n  usersList: usersReducer, /* страница пользователей */\r\n  auth: authReducer, /*Авторизация пользователя */\r\n  form: formReducer, /* Redux form */\r\n  app: appReducer\r\n}) \r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunkMiddleware))); //Для подключения redux devtools chrome \r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));  store создает внутри себя эти три свойства из массива как  в нашем store */\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './header/headerContainer';\nimport Main from './main/main';\nimport store from './redux/redux-store'; /*Импорт БД */\nimport { BrowserRouter } from 'react-router-dom'; /* Импорт модуля перехода между линками без перезагрузки */\nimport {Provider} from 'react-redux'; /* Импорт Provider'a из библиотеки react-redux */\n\nfunction App(props) {\n  return (\n      <div>\n        <div className=\"container\">\n          <HeaderContainer/>\n          <Main/>\n        </div>\n      </div>\n  );\n}\n\n\nlet MainApp =()=>{\n  return <BrowserRouter>\n          <Provider store={store}>\n            <App />\n          </Provider>\n        </BrowserRouter>\n}\nexport default MainApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'; /*Импорт react modules */\r\nimport ReactDOM from 'react-dom'; \r\nimport './index.css'; \r\nimport MainApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n  ReactDOM.render(<MainApp/>,document.getElementById('root'));\r\nserviceWorker.unregister();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3FbOc\",\"info\":\"post_info__3WiHU\",\"title\":\"post_title__2bwir\",\"body\":\"post_body__vSFW9\",\"name\":\"post_name__2mDt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2UDMM\",\"form\":\"login_form__2cWyF\",\"input\":\"login_input__3v2YC\",\"summaryError\":\"login_summaryError__29_Ti\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__29Sx6\",\"logo\":\"header_logo__11XSr\",\"name\":\"header_name__3gp98\",\"login\":\"header_login__3RX3t\",\"loginNav\":\"header_loginNav__1u0kV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sidebar_container__28T__\",\"sidebar\":\"sidebar_sidebar__34yWD\",\"active\":\"sidebar_active__3vAjV\",\"title_friends\":\"sidebar_title_friends__2yTOl\"};","import React from 'react';\r\nimport s from './button.module.css';\r\nimport cn from 'classnames';\r\nconst Button = (props) => {  \r\nreturn(\r\n<button className={cn(s.button)} type=\"submit\" onClick={props.function}>\r\n  {props.name}</button>\r\n);\r\n}\r\nexport default Button;","module.exports = __webpack_public_path__ + \"static/media/userAvatar.789c4f14.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.0b7c9cec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatarEnot.f3ec6652.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatarCat.e909c6d0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"friendList_container__R-0-2\",\"name\":\"friendList_name__ivG2I\",\"avatar\":\"friendList_avatar__3t8f7\",\"loginLink\":\"friendList_loginLink__1UAhY\",\"noLogin\":\"friendList_noLogin__3kCvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"formWarning_inputWrapper__28WZp\",\"input\":\"formWarning_input__2BBXt\",\"exclamation\":\"formWarning_exclamation__2iwyD\",\"warning\":\"formWarning_warning__374BE\",\"warningText\":\"formWarning_warningText__1gLUM\",\"error\":\"formWarning_error__2VN_8\"};","export const updateObjectInArray = (items, itemsId,objPropName,newObjProps) =>{\r\n  return items.map( u=> {\r\n    if (u[objPropName] === itemsId){\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n  })}\r\n","import {usersAPI} from '../api/api';\r\nimport {updateObjectInArray} from '../helper';\r\nconst Follow = 'FOLLOW-USER',\r\n      Unfollow = 'UNFOLLOW-USER',\r\n      SetState = 'SET-STATE',\r\n      Set_Users_Current_Page = 'SET-USERS-CURRENT-PAGE',\r\n      set_Total_User_Count = 'SET-TOTAL-USER-COUNT',\r\n      loader_Users = 'LOADER-USERS',\r\n      following_Users = 'FOLLOWING-USERS';\r\n      \r\nlet initialState = {\r\n  users:[],\r\n  usersTotalCount: 0, /* Всего пользователей*/ \r\n  usersOnPages:  10,   /* Пользователей на одной странице*/\r\n  currentPage: 1,     /* Текущая страница*/\r\n  isFetching: false,  /* Loader */\r\n  following: [],    /* Подписка на пользователя */\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case Follow :{ /*Подписка на пользователя */ \r\n      return {\r\n        ...state, \r\n        users: updateObjectInArray(state.users,action.userID,'id',{followed: true}) //импорт из helper.js\r\n        /*state.users.map( u=> {\r\n          if (u.id === action.userID){\r\n            return {...u, followed: true}\r\n          }\r\n          return u;\r\n        })*/\r\n      }\r\n    }\r\n    case Unfollow:{ /*Отписка от пользователя */\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users,action.userID,'id',{followed: false}) //импорт из helper.js\r\n      }\r\n    }\r\n    case SetState :{ /*Запрашиваем массив данных с сервера */\r\n      return { ...state, users: [...action.users] }\r\n    }\r\n    case Set_Users_Current_Page :{ /*Устаналиваем текущую страницу */\r\n      return { ...state, currentPage: action.currentPage }\r\n    }\r\n    case set_Total_User_Count :{ /* Добавляем всех пользователей с сервера */\r\n      return { ...state, usersTotalCount: action.count /*Делим на 100 потому что слишком много пользователей */ }\r\n    }\r\n    case loader_Users :{ \r\n      return { ...state, isFetching: action.isFetching}\r\n    }\r\n    case following_Users :{ \r\n      return { ...state, \r\n        following: action.isFollowing \r\n        ? [...state.following, action.userID] /* Добавляем id в массив following */\r\n        : state.following.filter(id=>id !== action.userID) /* Удаляем id из массива */\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\nexport const setState = (users) =>({type: SetState, users})\r\nconst follow = (userID) => ({ type : Follow , userID})\r\nconst unfollow = (userID) =>({ type : Unfollow, userID})\r\nconst setUsersCurrentPage = (currentPage) =>({type: Set_Users_Current_Page, currentPage })\r\nconst setTotalUserCount = (usersTotalCount) =>({type: set_Total_User_Count, count : usersTotalCount})\r\nconst loaderUsers = (isFetching) =>({type: loader_Users , isFetching})\r\nconst followingUsers = (isFollowing,userID) => ({type: following_Users, isFollowing,userID })\r\n\r\n\r\n        /*ThunkCreators*/\r\n\r\nexport const getUsers = (currentPage, usersOnPages)=>{\r\n  return async (dispatch) => {\r\n    dispatch(loaderUsers(true))\r\n    let response = await usersAPI.getUsers(currentPage ,usersOnPages)\r\n    dispatch(loaderUsers(false))\r\n    dispatch(setState(response.data.items));\r\n    dispatch(setTotalUserCount(response.data.totalCount));\r\n  }\r\n}\r\nexport const SetCurrentPage = (pageNumber)=>{ /*Переключение страниц на странице Всех пользователей */\r\nreturn(dispatch)=>{\r\n  dispatch(setUsersCurrentPage(pageNumber));\r\n}\r\n}\r\n\r\nconst followUnfollow = async (dispatch, userID , AC, ApiMethod ) => { \r\n  dispatch(followingUsers(true, userID))\r\n  let response = await ApiMethod(userID)\r\n    if(response.data.resultCode === 0){\r\n      dispatch(AC(userID));\r\n    }\r\n  dispatch(followingUsers(false, userID))\r\n}\r\n\r\nexport const followUser = (userID) =>{\r\n  return async (dispatch) =>{\r\n    followUnfollow(dispatch,userID, follow, usersAPI.Follow)\r\n  }\r\n}\r\n\r\nexport const UnfollowUser =(userID)=>{\r\n  return async (dispatch)=>{\r\n    followUnfollow(dispatch,userID, unfollow, usersAPI.Unfollow)\r\n  }\r\n}\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.10aa564c.jpeg\";","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport s from'./formWarning.module.css';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport const Textarea = ({input,meta,...props}) => {\r\n  let errorExclamation = meta.touched && meta.error \r\n  let errorText = meta.touched&&meta.error&&meta.active\r\nreturn <div className={s.inputWrapper + ' ' + (errorExclamation ? s.error : '')}>\r\n  {React.createElement(props.typefield,{   // Создаем элемент в зависимости от того что в props.type\r\n                            ...input, // Вытаскиваем данные input'a\r\n                            ...meta,  // Вытаскиваем данные meta из redux-form */\r\n                            ...props  // Оставшиеся пропсы\r\n                            })}\r\n            { errorExclamation && \r\n                <div className={s.exclamation}>\r\n                  <FontAwesomeIcon icon={faExclamationCircle}/>\r\n                </div>\r\n              }\r\n              {errorText&& <span className={s.warningText}>{meta.error}</span>}\r\n        </div>\r\n}\r\nexport default Textarea;","export const required = value =>{\r\n  if(value) return undefined;\r\n  return 'Обязательное поле';\r\n}\r\n\r\nexport const maxLength = (maxLength) =>{\r\nreturn (value)=>{\r\n  if(value && value.length >maxLength) return `Максимальное количество символов не может быть больше ${maxLength}`; \r\n  return undefined;\r\n}\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/avatarMusic.1e22ff6a.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"profileStatus_loader__3VBWF\"};"],"sourceRoot":""}